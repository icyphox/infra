apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: icyphox.sh
  namespace: default
  annotations:
    caddy.ingress.kubernetes.io/permanent-redirect: "https://anirudh.fi"
spec:
  ingressClassName: caddy
  rules:
  - host: icyphox.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: site
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: anirudh.fi
  namespace: default
spec:
  ingressClassName: caddy
  rules:
  - host: anirudh.fi
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: site
            port:
              number: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: site
  labels:
    app: site
spec:
  selector:
    matchLabels:
      app: site
  template:
    metadata:
      labels:
        app: site
    spec:
      nodeSelector:
        kubernetes.io/hostname: sini
      containers:
        - name: site
          image: nginx:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: site
              mountPath: /www
              readOnly: false
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          ports:
            - containerPort: 80
      volumes:
        - name: site
          hostPath:
            path: /var/www
        - name: nginx-config
          configMap:
            name: site-nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: site-nginx
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;
        sendfile        on;

        keepalive_timeout  65;

        gzip  on;

        server {
            listen 80;
            server_name _;

            location / {
                root /www;
                index index.html index.htm;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: site
spec:
  selector:
    app: site
  ports:
    - name: site-http
      port: 8080
      targetPort: 80

