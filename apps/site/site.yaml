apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: icyphox.sh
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri !~ "^/.well-known/webfinger") {
        return 301 https://anirudh.fi$request_uri;
      }
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - icyphox.sh
      secretName: icyphox-sh-tls
  rules:
    - host: icyphox.sh
      http:
        paths:
          - path: /.well-known/webfinger
            pathType: ImplementationSpecific
            backend:
              service:
                name: honk
                port:
                  number: 8080
    - host: icyphox.sh
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: garage
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: anirudh.fi
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - anirudh.fi
      secretName: anirudh-fi-tls
  rules:
    - host: anirudh.fi
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: garage
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oppiliappan.com
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      return 301 https://anirudh.fi$request_uri;
spec:
  ingressClassName: nginx
  rules:
    - host: oppiliappan.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: garage
                port:
                  number: 80
